package game.interf;

import game.model.building.incastle.*;
import game.model.unit.*;
import game.model.hero.HumanHero;

import java.util.Scanner;

public class BuyUnitMenu extends Inter {
    @Override
    public void display() {
        System.out.println("\n" +
                "  ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n" +
                "  ‚ïë" + BOLD + PURPLE + "                 ‚öîÔ∏è –ú–ï–ù–Æ –ü–û–ö–£–ü–ö–ò –Æ–ù–ò–¢–û–í                " + RESET + "   ‚ïë\n" +
                "  ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£\n" +
                "  ‚ïë " + YELLOW + "1. " + CYAN + "–ö–æ–ø–µ–π—â–∏–∫ (" + GameUnits.SPEARMAN.getCost() +
                " –∑–æ–ª–æ—Ç–∞) - —Ç—Ä–µ–±—É–µ—Ç " + GuardPost.getName() +
                String.format("%" + (25 - String.valueOf(GameUnits.SPEARMAN.getCost()).length() -
                        GuardPost.getName().length()) + "s", "") + RESET + "‚ïë\n" +
                "  ‚ïë " + YELLOW + "2. " + CYAN + "–ê—Ä–±–∞–ª–µ—Ç—á–∏–∫ (" + GameUnits.CROSSBOWMAN.getCost() +
                " –∑–æ–ª–æ—Ç–∞) - —Ç—Ä–µ–±—É–µ—Ç " + CrossbowmensTower.getName() +
                String.format("%" + (17 - String.valueOf(GameUnits.CROSSBOWMAN.getCost()).length() -
                        CrossbowmensTower.getName().length()) + "s", "") + RESET + "‚ïë\n" +
                "  ‚ïë " + YELLOW + "3. " + CYAN + "–ú–µ—á–Ω–∏–∫ (" + GameUnits.SWORDSMAN.getCost() +
                " –∑–æ–ª–æ—Ç–∞) - —Ç—Ä–µ–±—É–µ—Ç " + Armory.getName() +
                String.format("%" + (27 - String.valueOf(GameUnits.SWORDSMAN.getCost()).length() -
                        Armory.getName().length()) + "s", "") + RESET + "‚ïë\n" +
                "  ‚ïë " + YELLOW + "4. " + CYAN + "–ö–∞–≤–∞–ª–µ—Ä–∏—Å—Ç (" + GameUnits.CAVALRYMAN.getCost() +
                " –∑–æ–ª–æ—Ç–∞) - —Ç—Ä–µ–±—É–µ—Ç " + Arena.getName() +
                String.format("%" + (23 - String.valueOf(GameUnits.CAVALRYMAN.getCost()).length() -
                        Arena.getName().length()) + "s", "") + RESET + "‚ïë\n" +
                "  ‚ïë " + YELLOW + "5. " + CYAN + "–ü–∞–ª–∞–¥–∏–Ω (" + GameUnits.PALADIN.getCost() +
                " –∑–æ–ª–æ—Ç–∞) - —Ç—Ä–µ–±—É–µ—Ç " + Cathedral.getName() +
                String.format("%" + (26 - String.valueOf(GameUnits.PALADIN.getCost()).length() -
                        Cathedral.getName().length()) + "s", "") + RESET + "‚ïë\n" +
                "  ‚ïë " + YELLOW + "6. " + CYAN + "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–∫–æ–º" +
                String.format("%" + 20 + "s", "") + RESET + "‚ïë\n" +
                "  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n");
    }

    public int handleInput(HumanHero player) {
        int choice = super.handleInput();
        clearConsole();

        Runnable showGold = () -> System.out.println(BOLD + GOLD_COLOR + "üí∞ –í–∞—à–µ –∑–æ–ª–æ—Ç–æ: " + player.getGold() + RESET + "\n");
        Scanner scanner = new Scanner(System.in);

        Unit selectedUnit = null;
        BuildingCastle requiredBuilding = null;
        String successMessage = "";

        switch (choice) {
            case 1:
                selectedUnit = GameUnits.SPEARMAN;
                requiredBuilding = GameBuildings.GUARD_POST;
                successMessage = GREEN + "üõ°Ô∏è –ö–æ–ø–µ–π—â–∏–∫ –Ω–∞–Ω—è—Ç –≤ –≤–∞—à—É –∞—Ä–º–∏—é!" + RESET;
                break;
            case 2:
                selectedUnit = GameUnits.CROSSBOWMAN;
                requiredBuilding = GameBuildings.CROSSBOWMENS_TOWER;
                successMessage = GREEN + "üèπ –ê—Ä–±–∞–ª–µ—Ç—á–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –æ—Ç—Ä—è–¥—É!" + RESET;
                break;
            case 3:
                selectedUnit = GameUnits.SWORDSMAN;
                requiredBuilding = GameBuildings.ARMORY;
                successMessage = GREEN + "‚öîÔ∏è –ú–µ—á–Ω–∏–∫ –≥–æ—Ç–æ–≤ –∫ –±–æ—é!" + RESET;
                break;
            case 4:
                selectedUnit = GameUnits.CAVALRYMAN;
                requiredBuilding = GameBuildings.ARENA;
                successMessage = GREEN + "üêé –ö–∞–≤–∞–ª–µ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∞ –Ω–æ–≤—ã–º–∏ –±–æ–π—Ü–∞–º–∏!" + RESET;
                break;
            case 5:
                selectedUnit = GameUnits.PALADIN;
                requiredBuilding = GameBuildings.CATHEDRAL;
                successMessage = GREEN + "‚ú® –ü–∞–ª–∞–¥–∏–Ω—ã –æ—Å–≤—è—Ç–∏–ª–∏ –≤–∞—à–∏ —Ä—è–¥—ã!" + RESET;
                break;
            case 6:
                System.out.println(CYAN + "‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–∫–æ–º..." + RESET);
                return choice;
            default:
                showGold.run();
                System.out.println(RED + "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." + RESET);
                return choice;
        }

        if (!player.getMyCastle().containsName(requiredBuilding)) {
            showGold.run();
            System.out.println(RED + "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è " + requiredBuilding.getNameNotStat() + "!" + RESET);
            return choice;
        }

        System.out.print(BOLD + "üî¢ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —é–Ω–∏—Ç–æ–≤ –¥–ª—è –Ω–∞–π–º–∞: " + RESET);
        int count;
        try {
            count = Integer.parseInt(scanner.nextLine());
            if (count <= 0) throw new NumberFormatException();
        } catch (NumberFormatException e) {
            System.out.println(RED + "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!" + RESET);
            return choice;
        }

        int totalCost = selectedUnit.getCost() * count;
        if (player.noHaveMoney(totalCost)) {
            showGold.run();
            System.out.println(RED + "‚ö†Ô∏è –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–æ–ª–æ—Ç–∞ –Ω–∞ " + count + " —é–Ω–∏—Ç–æ–≤ (–Ω—É–∂–Ω–æ " + totalCost + ")" + RESET);
            return choice;
        }

        player.spendMoney(totalCost);
        for (int i = 0; i < count; i++) {
            player.addUnits(selectedUnit.clone());
        }

        showGold.run();
        System.out.println(successMessage + " (√ó" + count + ")");
        return choice;
    }
}